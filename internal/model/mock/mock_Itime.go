// Code generated by MockGen. DO NOT EDIT.
// Source: internal/model/model.go

// Package mock_model is a generated GoMock package.
package mock_model

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	time "time"
)

// MockItime is a mock of Itime interface
type MockItime struct {
	ctrl     *gomock.Controller
	recorder *MockItimeMockRecorder
}

// MockItimeMockRecorder is the mock recorder for MockItime
type MockItimeMockRecorder struct {
	mock *MockItime
}

// NewMockItime creates a new mock instance
func NewMockItime(ctrl *gomock.Controller) *MockItime {
	mock := &MockItime{ctrl: ctrl}
	mock.recorder = &MockItimeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockItime) EXPECT() *MockItimeMockRecorder {
	return m.recorder
}

// Now mocks base method
func (m *MockItime) Now() time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Now")
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// Now indicates an expected call of Now
func (mr *MockItimeMockRecorder) Now() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Now", reflect.TypeOf((*MockItime)(nil).Now))
}

// Correct mocks base method
func (m *MockItime) Correct(t time.Time) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Correct", t)
}

// Correct indicates an expected call of Correct
func (mr *MockItimeMockRecorder) Correct(t interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Correct", reflect.TypeOf((*MockItime)(nil).Correct), t)
}
